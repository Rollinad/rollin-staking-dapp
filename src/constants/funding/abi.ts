export const DAOFundingABI = [
  // Core functionality
  {
    inputs: [{ internalType: "string", name: "xAccountId", type: "string" }],
    name: "registerUser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "string", name: "xAccountId", type: "string" }],
    name: "updateToCreator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "targetAmount", type: "uint256" },
      { internalType: "string", name: "tokenName", type: "string" },
      { internalType: "string", name: "tokenSymbol", type: "string" },
      { internalType: "uint256", name: "tokenSupply", type: "uint256" },
    ],
    name: "createProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "proposalId", type: "uint256" }],
    name: "approveProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "proposalId", type: "uint256" }],
    name: "requestToContribute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "proposalId", type: "uint256" },
      { internalType: "address", name: "contributor", type: "address" },
      { internalType: "uint256", name: "contributionLimit", type: "uint256" },
    ],
    name: "approveContributor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "proposalId", type: "uint256" }],
    name: "contribute",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "proposalId", type: "uint256" }],
    name: "releaseFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "proposalId", type: "uint256" }],
    name: "withdrawContribution",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "proposalId", type: "uint256" }],
    name: "swapETHForTokens",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "proposalId", type: "uint256" },
      { internalType: "uint256", name: "tokenAmount", type: "uint256" },
    ],
    name: "swapTokensForETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "proposalId", type: "uint256" }],
    name: "setApprovalForTokenRefund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export const DAOViewABI = [
  // View functions
  {
    inputs: [{ internalType: "address", name: "creator", type: "address" }],
    name: "getCreatorInfo",
    outputs: [
      { internalType: "string", name: "xAccountId", type: "string" },
      { internalType: "bool", name: "isRegistered", type: "bool" },
      { internalType: "bool", name: "isCreator", type: "bool" },
      { internalType: "uint256[]", name: "proposalIds", type: "uint256[]" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalProposals",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "offset", type: "uint256" },
      { internalType: "uint256", name: "limit", type: "uint256" },
    ],
    name: "getProposalsPaginated",
    outputs: [
      {
        components: [
          { internalType: "address", name: "creator", type: "address" },
          { internalType: "uint256", name: "targetAmount", type: "uint256" },
          { internalType: "uint256", name: "currentAmount", type: "uint256" },
          { internalType: "uint256", name: "createdAt", type: "uint256" },
          { internalType: "bool", name: "isApproved", type: "bool" },
          { internalType: "bool", name: "isClosed", type: "bool" },
          { internalType: "bool", name: "tokensDeployed", type: "bool" },
          { internalType: "string", name: "tokenName", type: "string" },
          { internalType: "string", name: "tokenSymbol", type: "string" },
          { internalType: "uint256", name: "tokenSupply", type: "uint256" },
          {
            internalType: "uint256",
            name: "allocationSupply",
            type: "uint256",
          },
          { internalType: "uint256", name: "tokenPrice", type: "uint256" },
          {
            internalType: "uint256",
            name: "contributionPrice",
            type: "uint256",
          },
          { internalType: "string", name: "creatorXAccountId", type: "string" },
          { internalType: "address", name: "tokenAddress", type: "address" },
          { internalType: "address", name: "ammAddress", type: "address" },
        ],
        internalType: "struct IDAOStorage.ProposalView[]",
        name: "list",
        type: "tuple[]",
      },
      { internalType: "uint256", name: "total", type: "uint256" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "creator", type: "address" }],
    name: "getProposalsByCreator",
    outputs: [
      {
        components: [
          { internalType: "address", name: "creator", type: "address" },
          { internalType: "uint256", name: "targetAmount", type: "uint256" },
          { internalType: "uint256", name: "currentAmount", type: "uint256" },
          { internalType: "uint256", name: "createdAt", type: "uint256" },
          { internalType: "bool", name: "isApproved", type: "bool" },
          { internalType: "bool", name: "isClosed", type: "bool" },
          { internalType: "bool", name: "tokensDeployed", type: "bool" },
          { internalType: "string", name: "tokenName", type: "string" },
          { internalType: "string", name: "tokenSymbol", type: "string" },
          { internalType: "uint256", name: "tokenSupply", type: "uint256" },
          {
            internalType: "uint256",
            name: "allocationSupply",
            type: "uint256",
          },
          { internalType: "uint256", name: "tokenPrice", type: "uint256" },
          {
            internalType: "uint256",
            name: "contributionPrice",
            type: "uint256",
          },
          { internalType: "string", name: "creatorXAccountId", type: "string" },
          { internalType: "address", name: "tokenAddress", type: "address" },
          { internalType: "address", name: "ammAddress", type: "address" },
        ],
        internalType: "struct IDAOStorage.ProposalView[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "bool", name: "onlyActive", type: "bool" },
      { internalType: "bool", name: "onlyApproved", type: "bool" },
    ],
    name: "getFilteredProposals",
    outputs: [
      {
        components: [
          { internalType: "address", name: "creator", type: "address" },
          { internalType: "uint256", name: "targetAmount", type: "uint256" },
          { internalType: "uint256", name: "currentAmount", type: "uint256" },
          { internalType: "uint256", name: "createdAt", type: "uint256" },
          { internalType: "bool", name: "isApproved", type: "bool" },
          { internalType: "bool", name: "isClosed", type: "bool" },
          { internalType: "bool", name: "tokensDeployed", type: "bool" },
          { internalType: "string", name: "tokenName", type: "string" },
          { internalType: "string", name: "tokenSymbol", type: "string" },
          { internalType: "uint256", name: "tokenSupply", type: "uint256" },
          {
            internalType: "uint256",
            name: "allocationSupply",
            type: "uint256",
          },
          { internalType: "uint256", name: "tokenPrice", type: "uint256" },
          {
            internalType: "uint256",
            name: "contributionPrice",
            type: "uint256",
          },
          { internalType: "string", name: "creatorXAccountId", type: "string" },
          { internalType: "address", name: "tokenAddress", type: "address" },
          { internalType: "address", name: "ammAddress", type: "address" },
        ],
        internalType: "struct IDAOStorage.ProposalView[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "proposalId", type: "uint256" },
      { internalType: "address", name: "contributor", type: "address" },
    ],
    name: "getContributionInfo",
    outputs: [
      { internalType: "uint256", name: "limit", type: "uint256" },
      { internalType: "uint256", name: "currentContribution", type: "uint256" },
      { internalType: "uint256", name: "tokenAllocation", type: "uint256" },
      { internalType: "bool", name: "isApproved", type: "bool" },
      { internalType: "bool", name: "hasRequested", type: "bool" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "proposalId", type: "uint256" }],
    name: "getCurrentTokenPrice",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "proposalId", type: "uint256" }],
    name: "getProposalBasicDetails",
    outputs: [
      { internalType: "address", name: "creator", type: "address" },
      { internalType: "uint256", name: "targetAmount", type: "uint256" },
      { internalType: "uint256", name: "currentAmount", type: "uint256" },
      { internalType: "uint256", name: "createdAt", type: "uint256" },
      { internalType: "bool", name: "isApproved", type: "bool" },
      { internalType: "bool", name: "isClosed", type: "bool" },
      { internalType: "bool", name: "tokensDeployed", type: "bool" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "proposalId", type: "uint256" }],
    name: "getProposalTokenDetails",
    outputs: [
      { internalType: "string", name: "tokenName", type: "string" },
      { internalType: "string", name: "tokenSymbol", type: "string" },
      { internalType: "uint256", name: "tokenSupply", type: "uint256" },
      { internalType: "uint256", name: "tokenPrice", type: "uint256" },
      { internalType: "address", name: "tokenAddress", type: "address" },
      { internalType: "address", name: "ammAddress", type: "address" },
      { internalType: "string", name: "creatorXAccountId", type: "string" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "proposalId", type: "uint256" }],
    name: "getProposalStatus",
    outputs: [
      { internalType: "bool", name: "isActive", type: "bool" },
      { internalType: "bool", name: "hasMetTarget", type: "bool" },
      { internalType: "uint256", name: "timeRemaining", type: "uint256" },
      { internalType: "uint256", name: "percentageComplete", type: "uint256" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "proposalId", type: "uint256" }],
    name: "getTokenBalance",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "proposalId", type: "uint256" },
      { internalType: "address", name: "account", type: "address" },
    ],
    name: "getAddressTokenBalance",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "proposalId", type: "uint256" },
      { internalType: "uint256", name: "offset", type: "uint256" },
      { internalType: "uint256", name: "limit", type: "uint256" },
    ],
    name: "getRequestingContributorsPaginated",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "contributorAddress",
            type: "address",
          },
          { internalType: "bool", name: "hasRequested", type: "bool" },
          { internalType: "bool", name: "isApproved", type: "bool" },
          {
            internalType: "uint256",
            name: "contributionLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currentContribution",
            type: "uint256",
          },
        ],
        internalType: "struct IDAOStorage.ContributorInfo[]",
        name: "list",
        type: "tuple[]",
      },
      { internalType: "uint256", name: "total", type: "uint256" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "proposalId", type: "uint256" },
      { internalType: "uint256", name: "offset", type: "uint256" },
      { internalType: "uint256", name: "limit", type: "uint256" },
    ],
    name: "getApprovedContributorsPaginated",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "contributorAddress",
            type: "address",
          },
          { internalType: "bool", name: "hasRequested", type: "bool" },
          { internalType: "bool", name: "isApproved", type: "bool" },
          {
            internalType: "uint256",
            name: "contributionLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "currentContribution",
            type: "uint256",
          },
        ],
        internalType: "struct IDAOStorage.ContributorInfo[]",
        name: "list",
        type: "tuple[]",
      },
      { internalType: "uint256", name: "total", type: "uint256" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "proposalId", type: "uint256" }],
    name: "getContributorsCounts",
    outputs: [
      { internalType: "uint256", name: "requestingCount", type: "uint256" },
      { internalType: "uint256", name: "approvedCount", type: "uint256" },
    ],
    stateMutability: "view",
    type: "function",
  },
];
